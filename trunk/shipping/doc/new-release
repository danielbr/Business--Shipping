#!/usr/bin/perl

use strict;
use warnings;
use English;

=pod

=head1 DESCRIPTION

new-release - the Business::Shipping release script.

=head1 RELEASE STEPS

 # Remove the old tars
 rm -f Business-Shipping-*.tar.gz
 
 # Update the CHANGELOG
 # cvs diff | more
 
 # Update the documentation
 make docs manifest && make && make test 
 
 # Commit to CVS
 #
 # TODO: would be nice if I could automatically pull the right
 #       stuff from the changelog, but that would more work than
 #       it's worth. 
 #
 cvs commit
 
 # Upload to server.
 make tardist
 doc/new-release Business-Shipping-*.tar.gz

 # Update to the next verision in Makefile.PL (if you haven't already)
 export NEW=0.78
 perl -pi -e "s/\$VERSION = \'.\...\'/\$VERSION = \'${NEW}\'/g" Makefile.PL
 
=cut 

my ( $file ) = @ARGV;

print "Usage: $PROGRAM_NAME Business-Shipping-n.nn.tar.gz\n" and exit 
	unless $file;

$file =~ m/^(Business-Shipping-\d\.\d\d)\.tar\.gz$/;
my $version = $1;

print "version = $version\n";
print "file=$file\n";

myexec( "scp $file kavod\@kavod\.com:html/" );

my $cmd = qq{ssh kavod\@kavod\.com \<\<EOF
cd html/Business-Shipping

# Move old releases to the 'older' folder
rm Business-Shipping-latest
rm Business-Shipping-latest.tar.gz
mv Business-Shipping-* older/

# Pull in the new file.
cd ..
mv $file Business-Shipping
cd Business-Shipping

# Unpack it and make links
tar zxf $file
ln -s $file Business-Shipping-latest.tar.gz
ln -s $version Business-Shipping-latest

# Update CVS
cd CVS-Business-Shipping
cvs up

# Update version number
cd ..
echo '$version' > .version

EOF
};

myexec( $cmd );

sub myexec
{
	my $cmd = shift;
	print "Going to execute \"$cmd\"...\n";
	return system ( $cmd );
}

